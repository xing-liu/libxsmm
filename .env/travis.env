#!/usr/bin/env sh
#
# This script is setting up a general environment providing:
# TESTSIZE, JOBID, COVID, and an UPLOAD command.
#
UNAME=$(command -v uname)
XARGS=$(command -v xargs)
GREP=$(command -v grep)
CURL=$(command -v curl)
GIT=$(command -v git)
TAR=$(command -v tar)
SED=$(command -v sed)
RM=$(command -v rm)

CURLOPTS="--ftp-create-dirs -k"

if [ "" = "${TRAVIS_BUILD_DIR}" ] && [ "" != "${BASH_SOURCE}" ]; then
  export TRAVIS_BUILD_DIR=$(dirname ${BASH_SOURCE})/..
fi
if [ "" = "${TRAVIS_BUILD_DIR}" ]; then
  export TRAVIS_BUILD_DIR=.
fi

if [ "" = "${TRAVIS_OS_NAME}" ] && [ "" != "${UNAME}" ]; then
  export TRAVIS_OS_NAME=$(${UNAME})
fi

if [ "${TRAVIS_OS_NAME}" != "osx" ]; then
  export LD_LIBRARY_PATH=${TRAVIS_BUILD_DIR}/lib:${LD_LIBRARY_PATH}
  export TESTSIZE=500
else # macOS
  export DYLD_LIBRARY_PATH=${TRAVIS_BUILD_DIR}/lib:${DYLD_LIBRARY_PATH}
  export TESTSIZE=10
fi

if [ "" = "${MAKEJ}" ]; then
  export MAKEJ="-j $(eval ${TRAVIS_BUILD_DIR}/scripts/tool_cpuinfo.sh -nc)"
fi

if [ "${TRAVIS_JOB_NUMBER}" != "" ]; then
  export JOBID=$(echo ${TRAVIS_JOB_NUMBER} | cut -d. -f2)
else
  export JOBID=0
fi

if [ "${COVID}" = "" ]; then
  export COVID=0
fi

if [ "${EIGEN}" = "" ]; then
  export EIGEN=0
fi

if [ "${UPLOAD_DIR}" = "" ]; then
  export UPLOAD_DIR=.
fi

if [ "" != "${UPLOAD_ENABLED}" ] && [ "0" != "${UPLOAD_ENABLED}" ] && [ "1" != "${COVERITY_SCAN_BRANCH}" ]; then
  if [ "${XARGS}" != "" ] && [ "${CURL}" != "" ] && [ "${GIT}" != "" ] && [ "${TAR}" != "" ] && [ "${RM}" != "" ] && \
     [ "${UPLOAD_KEY}" != "" ] && [ "${UPLOAD_USR}" != "" ] && [ "${UPLOAD_URL}" != "" ]; then
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      export DYLD_LIBRARY_PATH=${HOME}/openssl/lib:${DYLD_LIBRARY_PATH}
      export DYLD_LIBRARY_PATH=${HOME}/libssh2/lib:${DYLD_LIBRARY_PATH}
    else
      export LD_LIBRARY_PATH=${HOME}/openssl/lib:${LD_LIBRARY_PATH}
      export LD_LIBRARY_PATH=${HOME}/libssh2/lib:${LD_LIBRARY_PATH}
    fi
    export INSTALL=install-artifacts
    export PATH=${HOME}/curl/bin:${PATH}
    export UPLOAD="if [ -d \${UPLOAD_DIR} ]; then \
        UPLOAD_FILE=artifact-\${JOBID}-\${COVID}.tgz && \
        ${TAR} cfz \${UPLOAD_FILE} \${UPLOAD_DIR} || true; \
      fi && \
      if [ -e \${UPLOAD_FILE} ]; then \
        ${CURL} ${CURLOPTS} -u \"\${UPLOAD_USR}:\${UPLOAD_KEY}\" \
          -T \${UPLOAD_FILE} \${UPLOAD_URL} || true; \
        ${RM} \${UPLOAD_FILE}; \
      else \
        >&2 echo \"UPLOAD_DIR or UPLOAD_FILE is not specified!\"; \
      fi"
  else
    >&2 echo "UPLOAD command is not available!"
  fi
fi

# Avoid OSX right now; TODO: check for replacement syntax when using "sed" under OSX/BSD.
if [ "${GREP}" != "" ] && [ "${SED}" != "" ] && [ "${RM}" != "" ]; then
  export POSTPROC="if [ "0" = \"\${PIPESTATUS[0]}\" ]; \
    then \
      if [ -e .test.log ] && [ \"${TRAVIS_OS_NAME}\" != \"osx\" ]; then \
        if [ 0 != \$(${GREP} '\(libxsmm\|src\)\/..*[:(][0-9][0-9]*.*:[[:space:]]warning\([[:space:]]#[0-9][0-9]*\)*:' .test.log \
          | ${GREP} -v 'make\[[0-9][0-9]*\]'
          | ${GREP} -v 'Makefile:' \
          | ${GREP} -v '/samples/' \
          | ${GREP} -v 'dlopen' \
          | wc -l) ]; \
        then \
          echo \"================================================================================\"; \
          echo \"Errors (warnings)\"; \
          echo \"================================================================================\"; \
          ${SED} -e 's/.*\(\(libxsmm\|src\)\/..*[:(][0-9][0-9]*.*:[[:space:]]warning\([[:space:]]#[0-9][0-9]*\)*:[[:space:]]..*\)/\1/;tx;d;:x' \
                 -e 's/ \[..*\]//' .test.log -e 's/warning: //'\
            | ${GREP} -v 'make\[[0-9][0-9]*\]'
            | ${GREP} -v 'Makefile:' \
            | ${GREP} -v '/samples/' \
            | ${GREP} -v 'dlopen' \
            | sort -u; \
          ${RM} .test.log; \
          exit 1; \
        elif [ 0 != \$(${GREP} '\(libxsmm\|src\)\/..*[:(][0-9][0-9]*.*:[[:space:]]warning\([[:space:]]#[0-9][0-9]*\)*:' .test.log \
          | ${GREP} -v 'make\[[0-9][0-9]*\]'
          | ${GREP} -v 'Makefile:' \
          | ${GREP} -v 'dlopen' \
          | wc -l) ]; \
        then \
          echo \"================================================================================\"; \
          echo \"Warnings\"; \
          echo \"================================================================================\"; \
          ${SED} -e 's/.*\(\(libxsmm\|src\)\/..*[:(][0-9][0-9]*.*:[[:space:]]warning\([[:space:]]#[0-9][0-9]*\)*:[[:space:]]..*\)/\1/;tx;d;:x' \
                 -e 's/ \[..*\]//' .test.log -e 's/warning: //'\
            | ${GREP} -v 'make\[[0-9][0-9]*\]'
            | ${GREP} -v 'Makefile:' \
            | ${GREP} -v 'dlopen' \
            | sort -u; \
          ${RM} .test.log; \
        fi \
      else \
        echo \"No log file has been found, and hence no check for build warnings!\"; \
      fi \
    else \
      exit \${PIPESTATUS[0]}; \
    fi"
else
  >&2 echo "POSTPROC command is not available!"
fi

